========================= IN PROGRESS =============================
- CPU Usage is not accurate on windows | https://github.com/BaderEddineOuaich/Enigma/issues/2
- CodeQL still doesnt ignore Dependencies
- check if it is possible not to use zlib with curl to reduce libraries links therefor small binary size
- Make checks here https://github.com/BaderEddineOuaich/Enigma/blob/master/Source/Application/Application.cpp#L348
- Replace all ENIGMA_MB_TO_BYTES With ENIGMA_FRIENDLY_BYTES_SIZE 
- CppCheck good command: `cppcheck --enable=performance,portability,warning -i./Dependencies/ --language=c++ --max-ctu-depth=12 --std=c++17 --output-file=./CppCheck.txt . --force`
try adding --force option to cppaction repo pullrequest and --std= with check if its cpp & add it to Readme

- Add Algorithm::DetectFromBase64Cipher & DetectFromFile




============================== DONE ===============================
- DONE Add Search textfield feature in MyEncryptionsScene  with Like %%
- DONE added VACUUM sqlite command to defragment disk
- DONE (issue was argv[0] returns enigma.exe only) Investigate why ENV doesnt work on CLI (it works when running it from local 
debugger with ui, but when calling cli, it doesnt seem to be set or get)
- DONE check why loadingscene's bg color doesnt work
- DONE LoadingScene if(scene.isLoading()) render it over main scenes.back()

- DONE ... on action performed (onclick..) spawn detached thread r scene's worker thread seperated from ui 
- DONE use crypto++'s base64 encoder/decoder
- DONE irrelevant lines
https://github.com/BaderEddineOuaich/Enigma/blob/master/Source/Application/Application.cpp#L298
- DONE Add CLI option --list to show encryption records
- DONE Add CLi option --save -s to database if selected, and --list to show all encryption records
- DONE fixed warning C4191: 'type cast': unsafe conversion from 'GLFWglproc (__cdecl *)(const char *)' to 'GLADloadproc'
- DONE remove const from non-reference returns in window & application to resolve gcc warning [-Wignored-qualifiers]
- DONE Encrypt file scene, use fs::path(dir) / filename + ".enigma"; instead
- DONE Add Database system to save encrypted text or maybe files too, user can export/import database









=============================================================================
#if 0
#pragma region Populate Database With Random Data
	using namespace Enigma;
	auto e = std::make_unique<Encryption>();
	for (int i = 1; i <= 10000; i++)
	{
		e->title = Random::Str(Random::Int(3, 255));
		e->cipher.data = Random::Str(Random::Int(1024, 1024 * 1024 * 10));
		e->size = e->cipher.data.size();
		Database::AddEncryption(e);
		//if (Database::AddEncryption(e))
		//	std::printf("Added Encryption #%d\n", i);
		//else
		//	std::printf("Failed to add Encryptionn #%d\n", i);
	}
	std::cout << "Database total changes since connection: " << Database::GetInstance()->getTotalChanges() << std::endl;
	std::cout << "Database headerStr: " << Database::GetInstance()->getHeaderInfo().headerStr << std::endl;
	return 0;
#pragma endregion
#endif
