# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
DEFINES += -DINFOWARE_VERSION=\"0.6.0\" -DINFOWARE_USE_OPENGL=1 -DINFOWARE_USE_X11
INCLUDES += -Iinclude
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lX11 -lXrandr
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = Bin/Debug-linux-x86_64/infoware
TARGET = $(TARGETDIR)/libinfoware.a
OBJDIR = Bin-Intermediate/Debug-linux-x86_64/infoware
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -w
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -w -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = Bin/Release-linux-x86_64/infoware
TARGET = $(TARGETDIR)/libinfoware.a
OBJDIR = Bin-Intermediate/Release-linux-x86_64/infoware
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -w
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -w -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
TARGETDIR = Bin/Dist-linux-x86_64/infoware
TARGET = $(TARGETDIR)/libinfoware.a
OBJDIR = Bin-Intermediate/Dist-linux-x86_64/infoware
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -w
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -w -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/OpenCL.o
GENERATED += $(OBJDIR)/OpenGL.o
GENERATED += $(OBJDIR)/all.o
GENERATED += $(OBJDIR)/amounts_non_windows.o
GENERATED += $(OBJDIR)/amounts_windows.o
GENERATED += $(OBJDIR)/architecture_non_windows.o
GENERATED += $(OBJDIR)/architecture_windows.o
GENERATED += $(OBJDIR)/blank_all.o
GENERATED += $(OBJDIR)/cpuid_non_windows.o
GENERATED += $(OBJDIR)/cpuid_windows.o
GENERATED += $(OBJDIR)/d3d.o
GENERATED += $(OBJDIR)/displays_darwin.o
GENERATED += $(OBJDIR)/displays_default_blank.o
GENERATED += $(OBJDIR)/displays_windows.o
GENERATED += $(OBJDIR)/displays_x11.o
GENERATED += $(OBJDIR)/frequency_darwin.o
GENERATED += $(OBJDIR)/frequency_non_windows_non_darwin.o
GENERATED += $(OBJDIR)/frequency_windows.o
GENERATED += $(OBJDIR)/instruction_set.o
GENERATED += $(OBJDIR)/instruction_set_darwin.o
GENERATED += $(OBJDIR)/instruction_set_non_windows_non_darwin.o
GENERATED += $(OBJDIR)/instruction_set_windows.o
GENERATED += $(OBJDIR)/kernel_info_non_windows.o
GENERATED += $(OBJDIR)/kernel_info_windows.o
GENERATED += $(OBJDIR)/memory_darwin.o
GENERATED += $(OBJDIR)/memory_non_windows_non_darwin.o
GENERATED += $(OBJDIR)/memory_windows.o
GENERATED += $(OBJDIR)/os_info_darwin.o
GENERATED += $(OBJDIR)/os_info_non_windows_non_darwin.o
GENERATED += $(OBJDIR)/os_info_windows.o
GENERATED += $(OBJDIR)/quantities_cache_darwin.o
GENERATED += $(OBJDIR)/quantities_cache_non_windows_non_darwin.o
GENERATED += $(OBJDIR)/quantities_cache_windows.o
GENERATED += $(OBJDIR)/scope.o
GENERATED += $(OBJDIR)/sysctl_darwin.o
GENERATED += $(OBJDIR)/sysctl_non_darwin.o
GENERATED += $(OBJDIR)/vendor_id.o
GENERATED += $(OBJDIR)/vendor_model_name_darwin.o
GENERATED += $(OBJDIR)/vendor_model_name_non_windows_non_darwin.o
GENERATED += $(OBJDIR)/vendor_model_name_windows.o
GENERATED += $(OBJDIR)/version.o
GENERATED += $(OBJDIR)/winstring_non_windows.o
GENERATED += $(OBJDIR)/winstring_windows.o
OBJECTS += $(OBJDIR)/OpenCL.o
OBJECTS += $(OBJDIR)/OpenGL.o
OBJECTS += $(OBJDIR)/all.o
OBJECTS += $(OBJDIR)/amounts_non_windows.o
OBJECTS += $(OBJDIR)/amounts_windows.o
OBJECTS += $(OBJDIR)/architecture_non_windows.o
OBJECTS += $(OBJDIR)/architecture_windows.o
OBJECTS += $(OBJDIR)/blank_all.o
OBJECTS += $(OBJDIR)/cpuid_non_windows.o
OBJECTS += $(OBJDIR)/cpuid_windows.o
OBJECTS += $(OBJDIR)/d3d.o
OBJECTS += $(OBJDIR)/displays_darwin.o
OBJECTS += $(OBJDIR)/displays_default_blank.o
OBJECTS += $(OBJDIR)/displays_windows.o
OBJECTS += $(OBJDIR)/displays_x11.o
OBJECTS += $(OBJDIR)/frequency_darwin.o
OBJECTS += $(OBJDIR)/frequency_non_windows_non_darwin.o
OBJECTS += $(OBJDIR)/frequency_windows.o
OBJECTS += $(OBJDIR)/instruction_set.o
OBJECTS += $(OBJDIR)/instruction_set_darwin.o
OBJECTS += $(OBJDIR)/instruction_set_non_windows_non_darwin.o
OBJECTS += $(OBJDIR)/instruction_set_windows.o
OBJECTS += $(OBJDIR)/kernel_info_non_windows.o
OBJECTS += $(OBJDIR)/kernel_info_windows.o
OBJECTS += $(OBJDIR)/memory_darwin.o
OBJECTS += $(OBJDIR)/memory_non_windows_non_darwin.o
OBJECTS += $(OBJDIR)/memory_windows.o
OBJECTS += $(OBJDIR)/os_info_darwin.o
OBJECTS += $(OBJDIR)/os_info_non_windows_non_darwin.o
OBJECTS += $(OBJDIR)/os_info_windows.o
OBJECTS += $(OBJDIR)/quantities_cache_darwin.o
OBJECTS += $(OBJDIR)/quantities_cache_non_windows_non_darwin.o
OBJECTS += $(OBJDIR)/quantities_cache_windows.o
OBJECTS += $(OBJDIR)/scope.o
OBJECTS += $(OBJDIR)/sysctl_darwin.o
OBJECTS += $(OBJDIR)/sysctl_non_darwin.o
OBJECTS += $(OBJDIR)/vendor_id.o
OBJECTS += $(OBJDIR)/vendor_model_name_darwin.o
OBJECTS += $(OBJDIR)/vendor_model_name_non_windows_non_darwin.o
OBJECTS += $(OBJDIR)/vendor_model_name_windows.o
OBJECTS += $(OBJDIR)/version.o
OBJECTS += $(OBJDIR)/winstring_non_windows.o
OBJECTS += $(OBJDIR)/winstring_windows.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking infoware
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning infoware
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/architecture_non_windows.o: src/cpu/architecture/architecture_non_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/architecture_windows.o: src/cpu/architecture/architecture_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/all.o: src/cpu/endianness/all.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/frequency_darwin.o: src/cpu/frequency/frequency_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/frequency_non_windows_non_darwin.o: src/cpu/frequency/frequency_non_windows_non_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/frequency_windows.o: src/cpu/frequency/frequency_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/instruction_set.o: src/cpu/instruction_set/instruction_set.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/instruction_set_darwin.o: src/cpu/instruction_set/instruction_set_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/instruction_set_non_windows_non_darwin.o: src/cpu/instruction_set/instruction_set_non_windows_non_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/instruction_set_windows.o: src/cpu/instruction_set/instruction_set_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/quantities_cache_darwin.o: src/cpu/quantities_cache/quantities_cache_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/quantities_cache_non_windows_non_darwin.o: src/cpu/quantities_cache/quantities_cache_non_windows_non_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/quantities_cache_windows.o: src/cpu/quantities_cache/quantities_cache_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vendor_id.o: src/cpu/vendor_model_name/vendor_id.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vendor_model_name_darwin.o: src/cpu/vendor_model_name/vendor_model_name_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vendor_model_name_non_windows_non_darwin.o: src/cpu/vendor_model_name/vendor_model_name_non_windows_non_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vendor_model_name_windows.o: src/cpu/vendor_model_name/vendor_model_name_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cpuid_non_windows.o: src/detail/cpuid_non_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cpuid_windows.o: src/detail/cpuid_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/scope.o: src/detail/scope.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/sysctl_darwin.o: src/detail/sysctl_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/sysctl_non_darwin.o: src/detail/sysctl_non_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/winstring_non_windows.o: src/detail/winstring_non_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/winstring_windows.o: src/detail/winstring_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenCL.o: src/gpu/OpenCL.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGL.o: src/gpu/OpenGL.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/blank_all.o: src/gpu/blank_all.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/d3d.o: src/gpu/d3d.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/os_info_darwin.o: src/system/OS_info/os_info_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/os_info_non_windows_non_darwin.o: src/system/OS_info/os_info_non_windows_non_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/os_info_windows.o: src/system/OS_info/os_info_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/amounts_non_windows.o: src/system/amounts/amounts_non_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/amounts_windows.o: src/system/amounts/amounts_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/displays_darwin.o: src/system/displays/displays_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/displays_default_blank.o: src/system/displays/displays_default_blank.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/displays_windows.o: src/system/displays/displays_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/displays_x11.o: src/system/displays/displays_x11.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/kernel_info_non_windows.o: src/system/kernel_info/kernel_info_non_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/kernel_info_windows.o: src/system/kernel_info/kernel_info_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/memory_darwin.o: src/system/memory/memory_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/memory_non_windows_non_darwin.o: src/system/memory/memory_non_windows_non_darwin.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/memory_windows.o: src/system/memory/memory_windows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/version.o: src/version.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif